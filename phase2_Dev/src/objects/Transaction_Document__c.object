<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionOverrides>
        <actionName>Accept</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>CancelEdit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Clone</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Delete</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Edit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Follow</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>List</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>New</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>SaveEdit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Tab</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>View</actionName>
        <type>Default</type>
    </actionOverrides>
    <allowInChatterGroups>false</allowInChatterGroups>
    <compactLayoutAssignment>SYSTEM</compactLayoutAssignment>
    <deploymentStatus>Deployed</deploymentStatus>
    <description>A junction between the Document and a transaction.</description>
    <enableActivities>false</enableActivities>
    <enableBulkApi>true</enableBulkApi>
    <enableFeeds>false</enableFeeds>
    <enableHistory>false</enableHistory>
    <enableReports>false</enableReports>
    <enableSearch>true</enableSearch>
    <enableSharing>true</enableSharing>
    <enableStreamingApi>true</enableStreamingApi>
    <externalSharingModel>ControlledByParent</externalSharingModel>
    <fields>
        <fullName>Comments__c</fullName>
        <externalId>false</externalId>
        <label>Comments</label>
        <length>32768</length>
        <trackTrending>false</trackTrending>
        <type>LongTextArea</type>
        <visibleLines>3</visibleLines>
    </fields>
    <fields>
        <fullName>Contact_Role__c</fullName>
        <deleteConstraint>SetNull</deleteConstraint>
        <externalId>false</externalId>
        <label>Contact Role</label>
        <referenceTo>Contact_Role__c</referenceTo>
        <relationshipLabel>Transaction Documents</relationshipLabel>
        <relationshipName>Transaction_Documents</relationshipName>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Date_Attached__c</fullName>
        <externalId>false</externalId>
        <label>Date Attached</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Date</type>
    </fields>
    <fields>
        <fullName>Document_Attachment_Status__c</fullName>
        <externalId>false</externalId>
        <formula>TEXT(Document__r.Attachment_Status__c)</formula>
        <formulaTreatBlanksAs>BlankAsZero</formulaTreatBlanksAs>
        <label>Document Attachment Status</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Document_Level_Provider_Notes__c</fullName>
        <externalId>false</externalId>
        <formula>Document__r.Notes__c</formula>
        <formulaTreatBlanksAs>BlankAsZero</formulaTreatBlanksAs>
        <label>Document Level Provider Notes</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Document_Level__c</fullName>
        <externalId>false</externalId>
        <formula>If(Document__r.Provider__r.Record_Type_Name__c == &apos;Umbrella&apos;, &apos;Umbrella&apos; , &apos;Provider&apos;)</formula>
        <formulaTreatBlanksAs>BlankAsZero</formulaTreatBlanksAs>
        <label>Document Level</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Document_Type__c</fullName>
        <deleteConstraint>SetNull</deleteConstraint>
        <externalId>false</externalId>
        <label>Document Type</label>
        <referenceTo>Document_Type__c</referenceTo>
        <relationshipLabel>Transaction Documents</relationshipLabel>
        <relationshipName>Transaction_Documents</relationshipName>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Document__c</fullName>
        <deleteConstraint>SetNull</deleteConstraint>
        <externalId>false</externalId>
        <label>Document</label>
        <referenceTo>Document__c</referenceTo>
        <relationshipLabel>Transaction Documents (Document)</relationshipLabel>
        <relationshipName>Transaction_Documents1_del</relationshipName>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Last_Status_Date__c</fullName>
        <externalId>false</externalId>
        <label>Last Status Date</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Date</type>
    </fields>
    <fields>
        <fullName>Licensing_Transaction__c</fullName>
        <externalId>false</externalId>
        <label>Licensing Transaction</label>
        <referenceTo>Licensing_Transaction__c</referenceTo>
        <relationshipLabel>Transaction Documents</relationshipLabel>
        <relationshipName>Transaction_Documents</relationshipName>
        <relationshipOrder>0</relationshipOrder>
        <reparentableMasterDetail>false</reparentableMasterDetail>
        <trackTrending>false</trackTrending>
        <type>MasterDetail</type>
        <writeRequiresMasterRead>false</writeRequiresMasterRead>
    </fields>
    <fields>
        <fullName>Mode__c</fullName>
        <externalId>false</externalId>
        <label>Mode</label>
        <picklist>
            <picklistValues>
                <fullName>Optional</fullName>
                <default>true</default>
            </picklistValues>
            <picklistValues>
                <fullName>Required</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Additional</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Variance</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Individual</fullName>
                <default>false</default>
            </picklistValues>
            <restrictedPicklist>true</restrictedPicklist>
            <sorted>false</sorted>
        </picklist>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Note_For_Revision__c</fullName>
        <externalId>false</externalId>
        <label>Note For Revision</label>
        <length>32768</length>
        <trackTrending>false</trackTrending>
        <type>LongTextArea</type>
        <visibleLines>3</visibleLines>
    </fields>
    <fields>
        <fullName>Provider__c</fullName>
        <externalId>false</externalId>
        <formula>Document__r.Provider__c</formula>
        <formulaTreatBlanksAs>BlankAsZero</formulaTreatBlanksAs>
        <label>Provider</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>S3_File__c</fullName>
        <deleteConstraint>SetNull</deleteConstraint>
        <externalId>false</externalId>
        <label>S3 File</label>
        <referenceTo>S3_File__c</referenceTo>
        <relationshipLabel>Transaction Documents</relationshipLabel>
        <relationshipName>Transaction_Documents_del</relationshipName>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Status__c</fullName>
        <externalId>false</externalId>
        <label>Status</label>
        <picklist>
            <picklistValues>
                <fullName>To Upload</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>To Submit</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Submitted - EEC to Review</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Approved</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Rejected</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Returned for Revision</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>New Attachment</fullName>
                <default>false</default>
            </picklistValues>
            <restrictedPicklist>true</restrictedPicklist>
            <sorted>false</sorted>
        </picklist>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Transaction_Notes__c</fullName>
        <externalId>false</externalId>
        <label>Transaction Notes</label>
        <length>255</length>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Variance_on_Regulation__c</fullName>
        <deleteConstraint>SetNull</deleteConstraint>
        <externalId>false</externalId>
        <label>Variance on Regulation</label>
        <referenceTo>Variance_on_Regulation__c</referenceTo>
        <relationshipLabel>Transaction Documents</relationshipLabel>
        <relationshipName>Transaction_Documents</relationshipName>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Lookup</type>
    </fields>
    <label>Transaction Document</label>
    <listViews>
        <fullName>All</fullName>
        <filterScope>Everything</filterScope>
        <label>All</label>
    </listViews>
    <nameField>
        <displayFormat>TD- {0000000}</displayFormat>
        <label>Transaction Document ID</label>
        <type>AutoNumber</type>
    </nameField>
    <pluralLabel>Transaction Documents</pluralLabel>
    <searchLayouts/>
    <sharingModel>ControlledByParent</sharingModel>
    <validationRules>
        <fullName>Doc_Type_required_on_mode_selection</fullName>
        <active>true</active>
        <description>If the mode is Required or Optional then a document type is mandatory.</description>
        <errorConditionFormula>AND( Document_Type__c == NULL, OR(  ISPICKVAL(Mode__c , &apos;Required&apos;), ISPICKVAL(Mode__c , &apos;Optional&apos;) ))</errorConditionFormula>
        <errorDisplayField>Document_Type__c</errorDisplayField>
        <errorMessage>Document Type is required if mode is set to &apos;Required&apos; or &apos;Optional&apos;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Note_Required_If_Rejected</fullName>
        <active>true</active>
        <description>&quot;Status&quot; can not be changed to &quot;Rejected&quot; if &quot;Note for Revision&quot; is empty</description>
        <errorConditionFormula>AND(
  ISPICKVAL( Status__c , &apos;Rejected&apos;),
  Note_For_Revision__c == NULL
)</errorConditionFormula>
        <errorDisplayField>Status__c</errorDisplayField>
        <errorMessage>&quot;Status&quot; can not be changed to &quot;Rejected&quot; if &quot;Note for Revision&quot; is empty</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Note_required_if_returned_for_revision</fullName>
        <active>true</active>
        <description>A note is required if the status of the transaction document is set to &quot;Returned for Revision&quot;.</description>
        <errorConditionFormula>AND(
  ISPICKVAL( Status__c , &apos;Returned for Revision&apos;),
  Note_For_Revision__c == NULL
)</errorConditionFormula>
        <errorDisplayField>Note_For_Revision__c</errorDisplayField>
        <errorMessage>A note is required if the Transaction Document&apos;s Status is &quot;Returned for Revision&quot;.</errorMessage>
    </validationRules>
    <webLinks>
        <fullName>Promote_to_Umbrella</fullName>
        <availability>online</availability>
        <description>This button will change ownership of the current transaction document to the umbrella provider.</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Promote to Umbrella</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/32.0/connection.js&quot;)}; 
{!REQUIRESCRIPT(&quot;/soap/ajax/32.0/apex.js&quot;)};



try {
    
	
    var provider = sforce.connection.query(&quot;Select Id, Umbrella_Members__c, Record_Type_Name__c From Account Where Id = &apos;{!Transaction_Document__c.Provider__c}&apos;&quot;);

    if (provider.records.Record_Type_Name__c.indexOf(&apos;Umbrella&apos;) &gt; -1) {
        throw &quot;This document is already set at Umbrella level.&quot;;
    }

    if ({!Transaction_Document__c.Provider__c != null}) {
        if (provider.size == 0 || provider.records.Umbrella_Members__c == null) {
            throw &quot;The provider associated with this transaction is not associated with an umbrella.&quot;;
        }
    }

    if ({!!ISPICKVAL(Transaction_Document__c.Status__c, &apos;Approved&apos;)}) {
        throw &apos;The document must be in status &quot;Approved&quot; to be promoted at umbrella level.&apos;;
    }

    //Fetch the document type which is equal to document type id of transaction document and has allow use of umbrella level document set to false
    var documentTypes = sforce.connection.query(&quot;SELECT ID FROM Document_Type__c WHERE  ID = &apos;{!Transaction_Document__c.Document_TypeId__c}&apos; AND Allow_use_of_Umbrella_Level_Document__c=False&quot;);
    records = documentTypes.getArray(&quot;records&quot;);

    //If there are any records matching the criteria, throw the error	
    if (records.length &gt; 0) {
        throw &quot;This type of document is not allowed at Umbrella level and can not be promoted.&quot;;
    }

    //Fetch all the documents that match the document type and are in the provider&apos;s umbrella with approved for future usage and current fields set to true
    var documents = sforce.connection.query(&quot;SELECT ID FROM Document__c WHERE Document_Type__c = &apos;{!Transaction_Document__c.Document_TypeId__c}&apos; AND Provider__c = &apos;&quot; + provider.records.Umbrella_Members__c + &quot;&apos; AND Approved_for_Future_Usage__c = True AND Current__c = True&quot;);

    records = documents.getArray(&quot;records&quot;);

    if (records.length &gt; 0) {

        if (confirm(&quot;A document with the similar type is already available at Umbrella level, do you confirm that you want to replace that document with the current one?&quot;)) {

            var documents = sforce.connection.query(&quot;SELECT ID,Valid_To__c,Approved_for_Future_Usage__c FROM Document__c WHERE Document_Type__c = &apos;{!Transaction_Document__c.Document_TypeId__c}&apos; AND Provider__c = &apos;&quot; + provider.records.Umbrella_Members__c + &quot;&apos; AND Current__c = True&quot;);

            var newRecords = [];
            records = documents.getArray(&quot;records&quot;);
			var today = new Date();
			
            for (var iCount = 0; iCount &lt; records .length; iCount++) {

                var d = new sforce.SObject(&quot;Document__c&quot;);
                d.Id = records [iCount].Id;

                d.Valid_To__c = fixDate(today);
                d.Approved_for_Future_Usage__c = false;

                newRecords.push(d);
            }
          
            docResult = sforce.connection.update(newRecords);

            if (docResult[0].success === &quot;false&quot;) {
                throw &quot;Could not update a record(s).\n\nError: &quot; + docResult[0].errors.message;
            }

            var document = new sforce.SObject(&quot;Document__c&quot;);
            document.Id = &quot;{!Transaction_Document__c.DocumentId__c}&quot;;
            document.Provider__c = provider.records.Umbrella_Members__c;
            document.Approved_for_Future_Usage__c = true;
            document.Document_Type__c = &quot;{!Transaction_Document__c.Document_TypeId__c}&quot;;

            // Update the Document obj.
            docResult = sforce.connection.update([document]);

            if (docResult[0].success === &quot;false&quot;) {
                throw &quot;Could not update a record(s).\n\nError: &quot; + docResult[0].errors.message;
            }

            window.location.reload();
        }
    }


} catch (e) {
    alert(e);
}



function fixTime(time){
    if(time &lt; 10) {time = &quot;0&quot; + time};
    return time;
}

function fixDate(date){
  var Month = fixTime(date.getMonth() + 1);
  var Day = fixTime(date.getDate());
  var UTC = date.toUTCString();
  var Time = UTC.substring(UTC.indexOf(&apos;:&apos;)-2, UTC.indexOf(&apos;:&apos;)+6);
  var Minutes = fixTime(date.getMinutes());
  var Seconds = fixTime(date.getSeconds());
  return date.getFullYear() + &quot;-&quot; + Month + &quot;-&quot; + Day + &quot;T&quot; + Time;
}</url>
    </webLinks>
</CustomObject>
